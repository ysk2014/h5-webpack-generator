const path = require('path');
const webpack = require('webpack');
const merge = require('webpack-merge');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const FriendlyErrorsPlugin = require('friendly-errors-webpack-plugin');
let baseWebpackConfig = require('./base');

var multipleHtml = [{
    filename: "index.html",
    path: "../src/index.html"
}]

multipleHtml.forEach(function(item) {
    baseWebpackConfig.plugins.push(new HtmlWebpackPlugin({
        filename: item.filename,
        template: 'inline-html-withimg-loader!'+path.resolve(__dirname, item.path)
    }));
});


module.exports = merge(baseWebpackConfig, {
    output: {
        path: path.resolve(__dirname, '../dist/'),
        filename: 'js/[name].js',
        publicPath: '/'
    },

    devServer: {
        contentBase: path.resolve(__dirname,'../dist'),

        hot: true,
        // 开启服务器的模块热替换（HMR）

        host: 'localhost',

        port: 3000,

        inline: true,

        publicPath: '/',
        // 和上文output的"publicPath"值保持一致

        historyApiFallback: true,
    },

    plugins: [
        new webpack.HotModuleReplacementPlugin(),
        // 开启全局的模块热替换（HMR）

        new FriendlyErrorsPlugin(),
    ]
});